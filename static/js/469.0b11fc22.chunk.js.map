{"version":3,"file":"static/js/469.0b11fc22.chunk.js","mappings":"wPAwGA,QA3FA,WACE,MAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEX,OAAEC,EAAM,aAAEC,EAAY,aAAEC,IAAiBC,EAAAA,EAAAA,IAAU,CACvDC,cAAe,CACbC,gBAAiB,GACjBC,SAAU,IAEZC,SAAUC,EAAAA,EACVC,gBAAgB,EAChBC,kBAAkB,EAClBC,SAAUC,MAAOZ,EAAQa,KACvB,IAAIC,EAAehB,GAASiB,EAAAA,EAAAA,IAAUf,IACtCgB,EAAAA,GAAMC,QAAQH,EAAc,CAC1BI,QAAS,gBACTC,QAAS,gBACTC,MAAO,kBAETN,EAAaO,MAAK,KAChBzB,EAAS,QAAQ,GACjB,IAIN,OACE0B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uEAAsEF,SAAA,EACnFF,EAAAA,EAAAA,KAACK,EAAAA,GAAO,CAACC,SAAS,aAAaC,cAAc,KAC7CJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kDAAiDF,SAAA,EAC9DF,EAAAA,EAAAA,KAAA,OAAKQ,IAAKC,EAAMC,IAAI,kBAAkBN,UAAU,gBAChDJ,EAAAA,EAAAA,KAAA,KAAGI,UAAU,gDAA+CF,SAAC,0BAI/DC,EAAAA,EAAAA,MAACQ,EAAAA,EAAG,CACFtB,SAAUT,EACVwB,UAAU,+BACVQ,UAAU,OACVC,GAAI,CACF,kBAAmB,CAAEC,EAAG,EAAGC,MAAO,QAElC,yBAA0B,CACxBC,MAAO,WAGT,0BAA2B,CACzBA,MAAO,YAGXC,YAAU,EACVC,aAAa,MAAKhB,SAAA,EAElBF,EAAAA,EAAAA,KAACmB,EAAAA,EAAS,CACRC,KAAK,kBACLhB,UAAU,sBACViB,MAAO3C,EAAOK,gBACduC,SAAU3C,EACV4C,MAAM,oBACNC,QAAQ,YAEVxB,EAAAA,EAAAA,KAACmB,EAAAA,EAAS,CACRM,OAAK,EACLL,KAAK,WACLhB,UAAU,sBACViB,MAAO3C,EAAOM,SACd0C,KAAK,WACLJ,SAAU3C,EACV4C,MAAM,WACNC,QAAQ,YAGVxB,EAAAA,EAAAA,KAAA,UAAQ0B,KAAK,SAAStB,UAAU,6BAA4BF,SAAC,gBAK/DC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oDAAmDF,SAAA,EAChEF,EAAAA,EAAAA,KAAA,KAAGI,UAAU,UAASF,SAAC,6BACvBF,EAAAA,EAAAA,KAAC2B,EAAAA,GAAI,CACHC,GAAG,IACHxB,UAAU,2FAA0FF,SACrG,oBAOX,C","sources":["authentication/SignIn.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nimport \"../style/authenticationStyle.css\";\r\nimport logo from \"../assets/blue.png\";\r\nimport { loginVerify } from \"../helper/validation.js\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { loginUser } from \"../store/authSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction SignIn() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const { values, handleChange, handleSubmit } = useFormik({\r\n    initialValues: {\r\n      emailOrUsername: \"\",\r\n      password: \"\",\r\n    },\r\n    validate: loginVerify,\r\n    validateOnBlur: false,\r\n    validateOnChange: false,\r\n    onSubmit: async (values, action) => {\r\n      let loginPromise = dispatch(loginUser(values));\r\n      toast.promise(loginPromise, {\r\n        loading: \"Logging In...\",\r\n        success: \"Login Success\",\r\n        error: \"Login Failed!\",\r\n      });\r\n      loginPromise.then(() => {\r\n        navigate(\"/home\");\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"h-screen flex flex-col justify-center items-center gap-[1vh] p-[4%] \">\r\n        <Toaster position=\"top-center\" reverseOrder={false}></Toaster>\r\n        <div className=\"flex flex-col gap-3 justify-center items-center\">\r\n          <img src={logo} alt=\"logo not found!\" className=\"h-28 w-28 \" />\r\n          <p className=\"font-semibold text-2xl font-style1 md:text-xl\">\r\n            Welcome back User\r\n          </p>\r\n        </div>\r\n        <Box\r\n          onSubmit={handleSubmit}\r\n          className=\"authntication-form flex-auto\"\r\n          component=\"form\"\r\n          sx={{\r\n            \"& > :not(style)\": { m: 1, width: \"40ch\" },\r\n            // Root class for the input field\r\n            \"& .MuiFilledInput-root\": {\r\n              color: \"#d0dbe4\",\r\n            },\r\n            // Class for the label of the filled input field\r\n            \"& .MuiInputLabel-filled\": {\r\n              color: \"#76d7c4\",\r\n            },\r\n          }}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n        >\r\n          <TextField\r\n            name=\"emailOrUsername\"\r\n            className=\"authntication-input\"\r\n            value={values.emailOrUsername}\r\n            onChange={handleChange}\r\n            label=\"Email or Username\"\r\n            variant=\"filled\"\r\n          />\r\n          <TextField\r\n            inert\r\n            name=\"password\"\r\n            className=\"authntication-input\"\r\n            value={values.password}\r\n            type=\"password\"\r\n            onChange={handleChange}\r\n            label=\"Password\"\r\n            variant=\"filled\"\r\n          />\r\n\r\n          <button type=\"submit\" className=\"p-2 rounded-3xl bg-sky-500\">\r\n            Sign In\r\n          </button>\r\n        </Box>\r\n\r\n        <div className=\"flex flex-col text-center flex-auto justify-start\">\r\n          <p className=\"text-sm\">Don't have any account?</p>\r\n          <Link\r\n            to=\"/\"\r\n            className=\"p-2 px-4 mt-2 w-full rounded-3xl border-2 border-sky-400 font-semibold hover:bg-sky-500 \"\r\n          >\r\n            Register\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n"],"names":["navigate","useNavigate","dispatch","useDispatch","values","handleChange","handleSubmit","useFormik","initialValues","emailOrUsername","password","validate","loginVerify","validateOnBlur","validateOnChange","onSubmit","async","action","loginPromise","loginUser","toast","promise","loading","success","error","then","_jsx","_Fragment","children","_jsxs","className","Toaster","position","reverseOrder","src","logo","alt","Box","component","sx","m","width","color","noValidate","autoComplete","TextField","name","value","onChange","label","variant","inert","type","Link","to"],"sourceRoot":""}